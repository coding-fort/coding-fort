(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{414:function(s,a,t){"use strict";t.r(a);var n=t(25),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"package-json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#package-json"}},[s._v("#")]),s._v(" package.json")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/m0_73531461/article/details/136399322",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考：深入理解 package.json 文件与 package-lock.json 文件"),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"_1-什么是-package-json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是-package-json"}},[s._v("#")]),s._v(" 1.什么是 package.json")]),s._v(" "),a("p",[a("prib",[s._v("package.json")]),s._v(" 文件一般都在每个项目的根目录下面，定义了这个项目所需要的各种模块，以及项目的配置信息，包括名称、版本、许可证、依赖模块等元数据。格式是严格的 JSON 格式。")],1),s._v(" "),a("p",[a("img",{attrs:{src:"/images/package.json-01.png",alt:"package.json-01.png",title:"package.json 内容组成"}})]),s._v(" "),a("h2",{attrs:{id:"_2-什么是-package-lock-json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-什么是-package-lock-json"}},[s._v("#")]),s._v(" 2.什么是 package-lock.json")]),s._v(" "),a("p",[a("prib",[s._v("package-lock.json")]),s._v(" 文件会保存 "),a("code",[s._v("node_modules")]),s._v(" 中所有包的信息，包括精确版本 "),a("code",[s._v("version")]),s._v(" 和下载地址 "),a("code",[s._v("resolved")]),s._v(" 以及依赖关系 "),a("code",[s._v("dependencies")]),s._v(" 等，用以记录当前状态下实际安装的各个模块的具体来源和版本号。这样 "),a("code",[s._v("npm install")]),s._v(" 时速度就会提升。")],1),s._v(" "),a("h2",{attrs:{id:"_3-为什么有-package-lock-json-还需要-package-lock-json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-为什么有-package-lock-json-还需要-package-lock-json"}},[s._v("#")]),s._v(" 3.为什么有 package-lock.json，还需要 package-lock.json")]),s._v(" "),a("p",[s._v("当项目中已有 "),a("code",[s._v("package-lock.json")]),s._v(" 文件，在安装项目依赖时，将以该文件为主进行解析安装指定版本依赖包，而不是使用 "),a("code",[s._v("package.json")]),s._v(" 来解析和安装模块。因为 "),a("code",[s._v("package.json")]),s._v(" 指定的版本不够具体，而 "),a("code",[s._v("package-lock.json")]),s._v(" 为每个模块及其每个依赖项指定了版本，位置和完整性哈希，所以它每次的安装都是相同的。")]),s._v(" "),a("p",[a("prib",[s._v("package-lock.json")]),s._v(" 文件主要作用有以下两点：")],1),s._v(" "),a("ul",[a("li",[s._v("当删除 "),a("code",[s._v("node_module")]),s._v(" 目录时，想通过 "),a("code",[s._v("npm install")]),s._v(" 恢复所有包时，提升下载速度。")]),s._v(" "),a("li",[s._v("锁定版本号，防止自动升级新版本。")])]),s._v(" "),a("p",[s._v("正因为有了 "),a("code",[s._v("package-lock.json")]),s._v(" 文件锁定版本号，所以当你执行 "),a("code",[s._v("npm install")]),s._v(" 的时候，node 不会自动更新 "),a("code",[s._v("package.json")]),s._v(" 文件中的模块，必须用 "),a("code",[s._v("npm install packagename（自动更新小版本号）")]),s._v("或者 "),a("code",[s._v("npm install packagename@x.x.x（指定版本号）")]),s._v("来进行安装才会更新，"),a("code",[s._v("package-lock.json")]),s._v(" 文件中的版本号也会随着更新。")]),s._v(" "),a("h2",{attrs:{id:"_4-项目中如何生成-package-json-和-package-lock-json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-项目中如何生成-package-json-和-package-lock-json"}},[s._v("#")]),s._v(" 4.项目中如何生成 package.json 和 package-lock.json")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 生成 package.json")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" init "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-y")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 生成 package-lock.json")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" --package-lock-only\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[a("bwe",[s._v("在首次安装依赖包时会创建 package-lock.json 文件。")])],1),s._v(" "),a("h2",{attrs:{id:"_5-npm-install-命令执行后发生什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-npm-install-命令执行后发生什么"}},[s._v("#")]),s._v(" 5.npm install 命令执行后发生什么")]),s._v(" "),a("p",[a("img",{attrs:{src:"/images/package.json-02.png",alt:"package.json-02.png",title:"npm install 命令执行后发生什么"}})]),s._v(" "),a("h2",{attrs:{id:"_6-版本符号含义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-版本符号含义"}},[s._v("#")]),s._v(" 6.版本符号含义")]),s._v(" "),a("p",[a("a",{attrs:{href:"/views/%E5%B7%A5%E7%A8%8B%E5%BC%80%E5%8F%91/%E6%A8%A1%E5%9D%97%E5%8C%96/%E5%8C%85%E7%AE%A1%E7%90%86/Npm"}},[s._v("[语义版本]")])]),s._v(" "),a("p",[s._v("指定版本：比如 "),a("code",[s._v("1.2.0")]),s._v("，遵循“大版本.次要版本.小版本”的格式规定，安装时只安装指定版本。")]),s._v(" "),a("ul",[a("li",[s._v("插入号：比如 "),a("code",[s._v("ˆ1.2.2")]),s._v("，表示安装 "),a("code",[s._v("1.x.x")]),s._v(" 的最新版本（不低于 1.2.2），但是不安装 "),a("code",[s._v("2.x.x")]),s._v("，安装时不改变大版本号。")]),s._v(" "),a("li",[s._v("波浪号：比如"),a("code",[s._v("~1.2.2")]),s._v("，表示安装 "),a("code",[s._v("1.2.x")]),s._v(" 的最新版本（不低于 1.2.2），但是不安装 "),a("code",[s._v("1.3.x")]),s._v("，安装时不改变大版本号和次要版本号。")]),s._v(" "),a("li",[a("code",[s._v("latest")]),s._v("：安装最新版本")])]),s._v(" "),a("p",[a("bwer",[s._v("如果大版本号为 0，则插入号的行为与波浪号相同，因为此时处于开发阶段，即使是次要版本号变动，也可能带来程序的不兼容。所以建议使用 ~ 来标记版本号，这样可以保证项目不会出现大的问题，也能保证包中的小 bug 可以得到修复。\n")])],1),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// package.json 中的版本符号")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"react"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^18.2.0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//  插入符号 ^18.2.0 ：匹配 18.X.X 的最新版本。")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"react-dom"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"~18.2.0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//  波浪符号 ~18.2.0 ：匹配 18.2.X 的最新版本。")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"react-refresh"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0.11.0"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//  固定版本 0.11.0 ： 匹配 0.11.0， 不会更新版本。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[a("bws",[a("code",[s._v("package.json")]),s._v(" 定义的是锁住主版本。"),a("code",[s._v("package-lock.json")]),s._v(" 定义的是锁住小版本")])],1),s._v(" "),a("h2",{attrs:{id:"_7-npm-脚本-npm-scripts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-npm-脚本-npm-scripts"}},[s._v("#")]),s._v(" 7.npm 脚本（npm scripts）")]),s._v(" "),a("p",[a("strong",[s._v("npm 脚本（npm scripts）")]),s._v(" 是 npm 提供的一个强大功能，允许开发者在 "),a("code",[s._v("package.json")]),s._v(" 文件中定义和执行自定义命令。这些脚本可以用于自动化常见的开发任务，如启动服务器、构建项目、运行测试等。通过使用 npm 脚本，开发者可以简化工作流程，确保团队成员遵循一致的开发标准，并且轻松地将任务集成到 CI/CD 管道中。")]),s._v(" "),a("h3",{attrs:{id:"_7-1-定义-npm-脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-定义-npm-脚本"}},[s._v("#")]),s._v(" 7.1.定义 npm 脚本")]),s._v(" "),a("p",[s._v("在 "),a("code",[s._v("package.json")]),s._v(" 文件中的 "),a("code",[s._v("scripts")]),s._v(" 字段下定义脚本。每个脚本由一个名称和相应的命令组成。例如：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my-app"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"version"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1.0.0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"start"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node server.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"build"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"webpack --config webpack.config.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"test"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jest"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"lint"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"eslint ."')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("在这个例子中，我们定义了四个脚本：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("start")]),s._v(": 使用 Node.js 启动 "),a("code",[s._v("server.js")]),s._v(" 文件。")]),s._v(" "),a("li",[a("code",[s._v("build")]),s._v(": 使用 Webpack 构建项目。")]),s._v(" "),a("li",[a("code",[s._v("test")]),s._v(": 运行 Jest 测试套件。")]),s._v(" "),a("li",[a("code",[s._v("lint")]),s._v(": 使用 ESLint 检查代码风格。")])]),s._v(" "),a("h3",{attrs:{id:"_7-2-执行-npm-脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-执行-npm-脚本"}},[s._v("#")]),s._v(" 7.2.执行 npm 脚本")]),s._v(" "),a("p",[s._v("要执行一个 npm 脚本，可以在命令行中使用 "),a("code",[s._v("npm run <script-name>")]),s._v("。例如：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run start\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run build\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run lint\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("对于一些常用的脚本（如 "),a("code",[s._v("start")]),s._v(", "),a("code",[s._v("test")]),s._v("），可以直接使用 "),a("code",[s._v("npm start")]),s._v(" 或 "),a("code",[s._v("npm test")]),s._v(" 来代替 "),a("code",[s._v("npm run")]),s._v("，这是 npm 的内置别名。")]),s._v(" "),a("h3",{attrs:{id:"_7-3-特殊脚本钩子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-特殊脚本钩子"}},[s._v("#")]),s._v(" 7.3.特殊脚本钩子")]),s._v(" "),a("p",[s._v("npm 支持一些特殊的生命周期事件，可以在特定时间点自动触发相关脚本。这些事件包括：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("preinstall")]),s._v(" 和 "),a("code",[s._v("postinstall")]),s._v(": 在安装依赖之前或之后执行。")]),s._v(" "),a("li",[a("code",[s._v("prepublishOnly")]),s._v(" 和 "),a("code",[s._v("postpublish")]),s._v(": 在发布包之前或之后执行（仅适用于 npm v7 及以上版本）。")]),s._v(" "),a("li",[a("code",[s._v("prepublish")]),s._v(", "),a("code",[s._v("prepare")]),s._v(", "),a("code",[s._v("prepack")]),s._v(", "),a("code",[s._v("postpack")]),s._v(": 发布前的不同阶段。")]),s._v(" "),a("li",[a("code",[s._v("prepublish")]),s._v(" 已被弃用，建议使用 "),a("code",[s._v("prepare")]),s._v(" 或 "),a("code",[s._v("prepublishOnly")]),s._v("。")])]),s._v(" "),a("p",[s._v("例如，如果你想在每次安装依赖后自动运行 ESLint 检查代码风格，可以在 "),a("code",[s._v("package.json")]),s._v(" 中添加如下配置：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"postinstall"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"npm run lint"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"_7-4-组合多个命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-组合多个命令"}},[s._v("#")]),s._v(" 7.4.组合多个命令")]),s._v(" "),a("p",[s._v("你可以通过在单个脚本中使用分号 "),a("code",[s._v(";")]),s._v(" 或者并行执行工具（如 "),a("code",[s._v("concurrently")]),s._v("）来组合多个命令。例如：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"dev"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"concurrently \\"npm run watch:css\\" \\"npm run start\\""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"watch:css"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sass --watch src/styles:dist/styles"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("在这个例子中，"),a("code",[s._v("dev")]),s._v(" 脚本会同时启动 CSS 编译监视器和应用程序服务器。")]),s._v(" "),a("h3",{attrs:{id:"_7-5-使用环境变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-5-使用环境变量"}},[s._v("#")]),s._v(" 7.5.使用环境变量")]),s._v(" "),a("p",[s._v("可以通过 "),a("code",[s._v(".env")]),s._v(" 文件或直接在命令中设置环境变量，以便根据不同的环境调整行为。例如：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"start"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"NODE_ENV=production node server.js"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("或者结合像 "),a("code",[s._v("dotenv")]),s._v(" 这样的库来加载环境变量文件：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"start"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dotenv -e .env.production -- node server.js"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"_7-6-访问全局和本地二进制文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-6-访问全局和本地二进制文件"}},[s._v("#")]),s._v(" 7.6.访问全局和本地二进制文件")]),s._v(" "),a("p",[s._v("npm 脚本会自动将 "),a("code",[s._v("node_modules/.bin")]),s._v(" 目录添加到 PATH 环境变量中，因此你可以直接调用通过 "),a("code",[s._v("devDependencies")]),s._v(" 安装的工具而无需指定完整路径。例如，如果你安装了 "),a("code",[s._v("eslint")]),s._v(" 作为开发依赖，可以直接在脚本中使用 "),a("code",[s._v("eslint")]),s._v(" 命令：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"lint"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"eslint ."')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"_7-7-错误处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-7-错误处理"}},[s._v("#")]),s._v(" 7.7.错误处理")]),s._v(" "),a("p",[s._v("默认情况下，如果脚本中的任何一个命令失败，整个脚本将会停止执行。你可以使用 "),a("code",[s._v("||")]),s._v(" 操作符来忽略错误继续执行后续命令，或者使用 "),a("code",[s._v("&&")]),s._v(" 来确保只有当上一个命令成功时才执行下一个命令。例如：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"prepublish"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"npm run lint && npm run build"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("在这个例子中，如果 "),a("code",[s._v("npm run lint")]),s._v(" 失败，则不会执行 "),a("code",[s._v("npm run build")]),s._v("。")])])}),[],!1,null,null,null);a.default=e.exports}}]);