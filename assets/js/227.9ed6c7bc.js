(window.webpackJsonp=window.webpackJsonp||[]).push([[227],{554:function(t,r,a){"use strict";a.r(r);var e=a(25),s=Object(e.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"es9-es2018"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#es9-es2018"}},[t._v("#")]),t._v(" ES9(ES2018)")]),t._v(" "),r("p",[t._v("ECMAScript 2018，通常被称为 ES9，是 JavaScript 的另一个年度版本，继续了每年一次的更新节奏。ES9 在 ES8 的基础上增加了几个新的语言特性，旨在提高代码的可读性、效率以及处理复杂数据结构的能力。以下是 ES9 中的一些关键新增特性：")]),t._v(" "),r("h3",{attrs:{id:"_1-rest-和-spread-属性-rest-spread-properties"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-rest-和-spread-属性-rest-spread-properties"}},[t._v("#")]),t._v(" 1. Rest 和 Spread 属性（Rest/Spread Properties）")]),t._v(" "),r("ul",[r("li",[t._v("Rest 属性允许你收集一个对象中的剩余属性，而 Spread 属性则允许你将一个对象的属性“展开”到另一个对象中。这在组合或克隆对象时非常有用。")])]),t._v(" "),r("h3",{attrs:{id:"_2-async-iterators-和-async-generators"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-async-iterators-和-async-generators"}},[t._v("#")]),t._v(" 2. Async Iterators 和 Async Generators")]),t._v(" "),r("ul",[r("li",[t._v("ES9 正式引入了异步迭代器和生成器，这使得处理异步数据流变得更加容易。"),r("code",[t._v("async function *")]),t._v(" 可以创建异步生成器，而 "),r("code",[t._v("for await...of")]),t._v(" 循环可以用来迭代这些异步生成器。")])]),t._v(" "),r("h3",{attrs:{id:"_3-numeric-separators"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-numeric-separators"}},[t._v("#")]),t._v(" 3. Numeric separators")]),t._v(" "),r("ul",[r("li",[t._v("在数字字面量中可以使用下划线 "),r("code",[t._v("_")]),t._v(" 作为分隔符，使大数更加可读。例如，你可以写 "),r("code",[t._v("1_000_000")]),t._v(" 而不是 "),r("code",[t._v("1000000")]),t._v("。")])]),t._v(" "),r("h3",{attrs:{id:"_4-regexp-lookbehind-assertions"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-regexp-lookbehind-assertions"}},[t._v("#")]),t._v(" 4. RegExp Lookbehind Assertions")]),t._v(" "),r("ul",[r("li",[t._v("正则表达式现在支持 lookbehind 断言，这使得匹配模式前的文本成为可能，这对于复杂的字符串解析非常有用。")])]),t._v(" "),r("h3",{attrs:{id:"_5-symbol-description"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-symbol-description"}},[t._v("#")]),t._v(" 5. Symbol Description")]),t._v(" "),r("ul",[r("li",[t._v("你可以在 "),r("code",[t._v("Symbol()")]),t._v(" 构造函数中传入描述字符串，该描述可以通过 "),r("code",[t._v(".description")]),t._v(" 属性访问，这在调试和日志记录时很有帮助。")])]),t._v(" "),r("h3",{attrs:{id:"_6-object-fromentries"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-object-fromentries"}},[t._v("#")]),t._v(" 6. Object.fromEntries()")]),t._v(" "),r("ul",[r("li",[t._v("这个方法与 "),r("code",[t._v("Object.entries()")]),t._v(" 相反，它接受一个键值对的数组并将其转换成一个对象。")])]),t._v(" "),r("h3",{attrs:{id:"_7-string-trimstart-和-string-trimend"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-string-trimstart-和-string-trimend"}},[t._v("#")]),t._v(" 7. String.trimStart() 和 String.trimEnd()")]),t._v(" "),r("ul",[r("li",[t._v("这两个方法分别从字符串的开始和结束去除空白字符，它们是 "),r("code",[t._v("String.trim()")]),t._v(" 方法的补充。")])]),t._v(" "),r("h3",{attrs:{id:"_8-array-prototype-flat-和-array-prototype-flatmap"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-array-prototype-flat-和-array-prototype-flatmap"}},[t._v("#")]),t._v(" 8. Array.prototype.flat() 和 Array.prototype.flatMap()")]),t._v(" "),r("ul",[r("li",[r("code",[t._v("flat()")]),t._v(" 方法可以用来扁平化嵌套数组，而 "),r("code",[t._v("flatMap()")]),t._v(" 结合了 "),r("code",[t._v("map()")]),t._v(" 和 "),r("code",[t._v("flat()")]),t._v(" 的功能，可以先映射每个元素然后扁平化结果。")])]),t._v(" "),r("h3",{attrs:{id:"_9-intl-listformat"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-intl-listformat"}},[t._v("#")]),t._v(" 9. Intl.ListFormat")]),t._v(" "),r("ul",[r("li",[t._v("提供了一种格式化列表的方式，这在国际化应用中非常有用。")])]),t._v(" "),r("p",[t._v("ES9 的这些特性进一步丰富了 JavaScript 语言，使得开发者能够以更简洁、更直观的方式处理数据和控制流程。随着现代浏览器对这些特性的不断支持，开发者可以利用它们来编写更加健壮和高效的代码。")])])}),[],!1,null,null,null);r.default=s.exports}}]);