(window.webpackJsonp=window.webpackJsonp||[]).push([[353],{683:function(v,_,t){"use strict";t.r(_);var s=t(25),r=Object(s.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"sop-same-origin-policy-同源策略"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#sop-same-origin-policy-同源策略"}},[v._v("#")]),v._v(" SOP (Same-Origin Policy, 同源策略)")]),v._v(" "),_("p",[v._v("SOP (Same-Origin Policy, 同源策略) 是 Web 浏览器的一项核心安全机制，它限制了一个域下的文档或脚本如何与另一个源的资源进行交互。同源策略的主要目的是防止恶意文档获取敏感信息，它是 Web 安全的基础之一。")]),v._v(" "),_("h3",{attrs:{id:"同源策略的基本概念"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#同源策略的基本概念"}},[v._v("#")]),v._v(" 同源策略的基本概念")]),v._v(" "),_("p",[v._v("根据同源策略，两个资源被认为是“同源”的，如果它们具有相同的协议 (protocol)、域名 (domain) 和端口 (port)。具体来说：")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("协议")]),v._v("：如 HTTP 或 HTTPS。")]),v._v(" "),_("li",[_("strong",[v._v("域名")]),v._v("：如 "),_("code",[v._v("example.com")]),v._v("。")]),v._v(" "),_("li",[_("strong",[v._v("端口")]),v._v("：如 80 或 443。")])]),v._v(" "),_("h3",{attrs:{id:"同源策略的作用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#同源策略的作用"}},[v._v("#")]),v._v(" 同源策略的作用")]),v._v(" "),_("ol",[_("li",[_("strong",[v._v("限制资源访问")]),v._v("：一个源的脚本不能读写另一个源的窗口特性、文档或脚本属性。")]),v._v(" "),_("li",[_("strong",[v._v("保护隐私")]),v._v("：阻止了不同源之间的数据泄露。")]),v._v(" "),_("li",[_("strong",[v._v("避免安全漏洞")]),v._v("：防止恶意脚本从一个网站窃取数据并发送到另一个网站。")])]),v._v(" "),_("h3",{attrs:{id:"例外和扩展"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#例外和扩展"}},[v._v("#")]),v._v(" 例外和扩展")]),v._v(" "),_("p",[v._v("尽管 SOP 提供了强大的安全性，但也存在一些例外和扩展机制：")]),v._v(" "),_("ol",[_("li",[_("strong",[v._v("JSONP (JSON with Padding)")]),v._v("：这是一种绕过同源策略限制的技术，用于实现跨域数据请求。它依赖于"),_("code",[v._v("<script>")]),v._v("标签不受 SOP 限制这一特性。")]),v._v(" "),_("li",[_("strong",[v._v("CORS (Cross-Origin Resource Sharing)")]),v._v("：跨源资源共享是一种机制，允许服务器明确指定哪些源可以访问其资源。它通过 HTTP 响应头来实现。")]),v._v(" "),_("li",[_("strong",[v._v("PostMessage")]),v._v("：允许不同源的窗口之间发送消息。通过使用"),_("code",[v._v("window.postMessage")]),v._v("方法，可以安全地交换数据。")])]),v._v(" "),_("h3",{attrs:{id:"如何检查同源"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#如何检查同源"}},[v._v("#")]),v._v(" 如何检查同源")]),v._v(" "),_("p",[v._v("浏览器通过比较请求和响应的源头来决定是否允许跨源访问。源头由以下三个部分组成：")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("协议")]),v._v("：例如 "),_("code",[v._v("http://")]),v._v(" 或 "),_("code",[v._v("https://")]),v._v("。")]),v._v(" "),_("li",[_("strong",[v._v("主机名")]),v._v("：例如 "),_("code",[v._v("example.com")]),v._v("。")]),v._v(" "),_("li",[_("strong",[v._v("端口号")]),v._v("：例如 "),_("code",[v._v("80")]),v._v(" 或 "),_("code",[v._v("443")]),v._v("。")])]),v._v(" "),_("p",[v._v("如果这三个部分完全相同，则认为两个资源是同源的；否则，它们被视为不同的源。")]),v._v(" "),_("h3",{attrs:{id:"同源策略的实现"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#同源策略的实现"}},[v._v("#")]),v._v(" 同源策略的实现")]),v._v(" "),_("p",[v._v("浏览器会自动执行同源策略检查。当尝试访问不同源的数据时，如果不符合同源策略的要求，浏览器会阻止该访问，并可能抛出错误。")]),v._v(" "),_("h3",{attrs:{id:"实际应用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#实际应用"}},[v._v("#")]),v._v(" 实际应用")]),v._v(" "),_("ol",[_("li",[_("strong",[v._v("开发时的注意事项")]),v._v("：当构建 Web 应用时，开发者需要考虑同源策略的影响，特别是在涉及跨域请求的情况下。")]),v._v(" "),_("li",[_("strong",[v._v("CORS 配置")]),v._v("：服务器端需要正确配置 CORS，以允许预期的跨域请求。")]),v._v(" "),_("li",[_("strong",[v._v("调试技巧")]),v._v("：在调试跨域问题时，可以通过浏览器的开发者工具查看网络请求和响应头，以确认是否设置了正确的 CORS 头部。")])]),v._v(" "),_("h3",{attrs:{id:"总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[v._v("#")]),v._v(" 总结")]),v._v(" "),_("p",[v._v("同源策略是 Web 安全的一个重要组成部分，它有助于保护用户的隐私和数据安全。通过理解和应用同源策略，开发者可以更好地构建安全的 Web 应用。")])])}),[],!1,null,null,null);_.default=r.exports}}]);