(window.webpackJsonp=window.webpackJsonp||[]).push([[283],{609:function(s,t,a){"use strict";a.r(t);var n=a(25),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"git-规范"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-规范"}},[s._v("#")]),s._v(" GIT_规范")]),s._v(" "),t("h2",{attrs:{id:"git-commit-规范"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-commit-规范"}},[s._v("#")]),s._v(" Git commit 规范")]),s._v(" "),t("ul",[t("li",[s._v("统一格式")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("scope"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("subject"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n// 注意冒号 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 后有空格\n// 如 feat"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": 增加用户中心的 xx 功能\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("ul",[t("li",[t("p",[s._v("scope 表示 commit 的作用范围，如用户中心、购物车中心，也可以是目录名称，一般可以限定几种；")])]),s._v(" "),t("li",[t("p",[s._v("subject 用于对 commit 进行简短的描述；")])]),s._v(" "),t("li",[t("p",[s._v("type 必填，表示提交类型，值一般有以下几种：")]),s._v(" "),t("ul",[t("li",[s._v("feat：新功能 feature")]),s._v(" "),t("li",[s._v("bug：测试反馈 bug 列表中的 bug 号")]),s._v(" "),t("li",[s._v("fix： 修复 bug")]),s._v(" "),t("li",[s._v("ui：更新 UI；")]),s._v(" "),t("li",[s._v("docs： 文档注释变更")]),s._v(" "),t("li",[s._v("style： 代码格式(不影响代码运行的变动)；")]),s._v(" "),t("li",[s._v("refactor： 重构、优化(既不增加新功能，也不是修复 bug)；")]),s._v(" "),t("li",[s._v("perf： 性能优化；")]),s._v(" "),t("li",[s._v("release：发布；")]),s._v(" "),t("li",[s._v("deploy：部署；")]),s._v(" "),t("li",[s._v("test： 增加测试")]),s._v(" "),t("li",[s._v("chore： 构建过程或辅助工具的变动")]),s._v(" "),t("li",[s._v("revert： 回退")]),s._v(" "),t("li",[s._v("build： 打包")])]),s._v(" "),t("blockquote",[t("h3",{attrs:{id:"结合工具强制使用-git-commit-规范"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#结合工具强制使用-git-commit-规范"}},[s._v("#")]),s._v(" 结合工具强制使用 Git Commit 规范：")]),s._v(" "),t("ul",[t("li",[s._v("使用 commitlint 、commitizen 和 husky 来进行提交检查；")]),s._v(" "),t("li",[s._v("使用 commitlint-config-cz 规范命令行提示消息（可选）；")]),s._v(" "),t("li",[s._v("使用 conventional-changelog 提交日志；")])])])])]),s._v(" "),t("p",[t("suc",[s._v("CommitLint")]),s._v(" 和 "),t("suc",[s._v("Husky")]),s._v(" 是两个在现代软件开发流程中广泛使用的工具，它们分别在代码提交规范和 Git 工作流自动化方面发挥着重要作用。")],1),s._v(" "),t("h3",{attrs:{id:"commitlint"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#commitlint"}},[s._v("#")]),s._v(" CommitLint")]),s._v(" "),t("p",[t("sucb",[s._v("CommitLint")]),s._v(" 是一个用于规范 Git 提交信息的工具。它的核心目的是"),t("err",[s._v("确保每一次代码提交都遵循一致的格式")]),s._v("，这有助于保持提交历史的清晰度和可读性，对于团队协作尤为重要。通过设置一套提交信息的规则（如 Angular、Conventional Commits 规范），CommitLint 能够在提交前检查提交信息是否符合这些规则。如果提交信息不合规，CommitLint 可以阻止提交或仅发出警告。这有助于维护良好的提交信息标准，使得通过提交历史快速理解项目变更变得更加容易。CommitLint 通常需要配置文件（如 "),t("sucb",[s._v("commitlint.config.js")]),s._v("）来定义规则。")],1),s._v(" "),t("h4",{attrs:{id:"commitlint-config-js-配置示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#commitlint-config-js-配置示例"}},[s._v("#")]),s._v(" commitlint.config.js 配置示例")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// commitlint.config.js")]),s._v("\nmodule"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遵循的是Angular团队推荐的提交信息规范（Conventional Commits），它定义了一套标准的提交类型、描述格式等，比如使用feat表示新功能，fix表示修复bug等")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@commitlint/config-conventional"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这部分是自定义或覆盖继承规则集中的具体规则，每个规则由三个元素组成：错误级别、应用时机和规则细节。")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("rules")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 这个规则指定了提交类型（type字段）必须是列表中所列的之一，比如feat（新功能）、fix（修复）、docs（文档更改）等。错误级别为2意味着如果提交类型不在列表中，将视为错误。"always"表明这条规则始终适用。')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v('"type-enum"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"always"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"feat"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fix"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"docs"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"style"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"refactor"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"perf"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"test"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"chore"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"revert"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"build"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v('"type-case"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 不检查提交类型的大小写")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v('"type-empty"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 允许提交类型为空")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v('"scope-empty"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 允许提交作用域（scope）为空")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v('"scope-case"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 不检查作用域的大小写")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v('"subject-full-stop"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"never"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 不要求提交信息的描述部分以句号结束")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v('"subject-case"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"never"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 不检查提交信息描述部分的大小写")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v('"header-max-length"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"always"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("72")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 不检查提交信息头部（包括type、scope和描述）的最大长度，尽管这里设置了一个最大长度为72，但由于错误级别为0，该规则实际上不起作用")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br")])]),t("h3",{attrs:{id:"husky"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#husky"}},[s._v("#")]),s._v(" Husky")]),s._v(" "),t("p",[t("sucb",[s._v("Husky")]),s._v(" 是一个 Git 钩子管理工具。Git 钩子是在 Git 仓库中特定事件（如提交、推送、合并等）发生前或发生后执行的脚本。Husky 允许开发者以更便捷的方式配置这些钩子，而无需直接在 "),t("err",[s._v(".git/hooks")]),s._v(" 目录下手动管理脚本文件。通过在项目中安装 Husky 并在配置文件中定义钩子脚本，可以自动化执行诸如"),t("strong",[s._v("代码格式化")]),s._v("、"),t("strong",[s._v("代码质量检查")]),s._v("、"),t("strong",[s._v("CommitLint 检查")]),s._v("等任务。这意味着开发者在执行 Git 操作时，比如 git commit，可以自动触发一系列预设的检查，从而保障代码质量和团队编码规范的统一。")],1),s._v(" "),t("h3",{attrs:{id:"协同作战"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#协同作战"}},[s._v("#")]),s._v(" 协同作战")]),s._v(" "),t("p",[t("sucb",[s._v("CommitLint")]),s._v(" 和 "),t("sucb",[s._v("Husky")]),s._v(" 经常协同工作，以增强 Git 工作流的自动化和规范化。例如，通过在 Husky 的配置中集成 CommitLint，可以在每次 "),t("errb",[s._v("git commit")]),s._v(" 前自动运行 CommitLint，检查提交信息是否符合团队的规范。如果提交信息不符合规则，Husky 可以阻止此次提交，直到开发者修正信息。这种组合不仅提高了代码质量，还促进了团队成员间的沟通和编码习惯的一致性。")],1),s._v(" "),t("h3",{attrs:{id:"commitizen"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#commitizen"}},[s._v("#")]),s._v(" Commitizen")]),s._v(" "),t("p",[t("sucb",[s._v("Commitizen")]),s._v(" 则是一个致力于使提交信息遵循特定格式的工具，它通过提供一个交互式的命令行界面（CLI），引导开发者按照一定的模板填写提交信息。Commitizen 的目标是使得提交信息更加结构化和标准化，它通常与像 Angular、Conventional Commits 这样的提交规范相结合。当运行 cz 或 git cz 命令时，开发者会被询问一系列问题，然后根据答案生成符合规范的提交消息。Commitizen 也能与 CommitLint 配合使用，以确保生成的提交信息在提交前通过格式验证。")],1),s._v(" "),t("h4",{attrs:{id:"安装-commitizen"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-commitizen"}},[s._v("#")]),s._v(" 安装 Commitizen")]),s._v(" "),t("p",[s._v("首先，你需要在你的项目中安装 Commitizen 和一个适配器，通常是 cz-conventional-changelog，它遵循 Angular 风格的提交信息规范。打开终端，进入你的项目目录，然后运行以下命令：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" --save-dev commitizen cz-conventional-changelog\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"初始化-commitizen"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#初始化-commitizen"}},[s._v("#")]),s._v(" 初始化 Commitizen")]),s._v(" "),t("p",[s._v("安装完成后，你需要初始化 Commitizen 并设置 cz-conventional-changelog 作为默认适配器。在项目根目录下运行：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("npx commitizen init cz-conventional-changelog --save-dev --save-exact\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("这会在你的项目中创建一个 "),t("err",[s._v(".czrc")]),s._v(" 配置文件，指向 cz-conventional-changelog 作为默认的 commit 规范。")],1),s._v(" "),t("h4",{attrs:{id:"使用-commitizen-提交"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-commitizen-提交"}},[s._v("#")]),s._v(" 使用 Commitizen 提交")]),s._v(" "),t("p",[s._v("从现在起，当你想要提交代码时，不再直接使用 git commit，而是使用 git cz 命令。这个命令会启动一个交互式提示，引导你完成提交信息的编写，通常会要求你输入以下内容：")]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("类型（Type）")]),s._v("：比如 feat 表示新功能，fix 表示修复错误，docs 表示文档更新等。")]),s._v(" "),t("li",[t("strong",[s._v("短描述（Subject）")]),s._v("：一个简洁的描述，概述了这次提交做了什么。")]),s._v(" "),t("li",[t("strong",[s._v("长描述（Body，可选）")]),s._v("：更详细的描述，如果有必要的话。")]),s._v(" "),t("li",[t("strong",[s._v("影响范围（Scope，可选）")]),s._v("：受影响的模块或功能区域。5. 关闭的 issue（Footer，可选）：如 Fixes #123，用于自动关闭相关的 issue。")])]),s._v(" "),t("h4",{attrs:{id:"配置与自定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置与自定义"}},[s._v("#")]),s._v(" 配置与自定义")]),s._v(" "),t("p",[s._v('Commitizen 支持自定义配置，可以通过修改 .czrc 文件或项目的 package.json 中的 "config" 字段来调整。例如，你可以自定义提示的问题，或者添加新的提交类型。')]),s._v(" "),t("h3",{attrs:{id:"husky-提交规范检查"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#husky-提交规范检查"}},[s._v("#")]),s._v(" husky 提交规范检查")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("在根目录新增目录"),t("span",{staticStyle:{color:"#ff502c"}},[s._v(".husky")])])]),s._v(" "),t("li",[t("p",[s._v("目录结构")]),s._v(" "),t("blockquote",[t("p",[s._v("|-.husky "),t("br"),s._v("\n|--_ "),t("br"),s._v("\n|---.gitignore "),t("br"),s._v("\n|---husky.sh "),t("br"),s._v("\n|--commit-msg "),t("br"),s._v("\n|--pre-commit "),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("husky.sh")])])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/sh")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-z")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$husky_skip_init")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("debug")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$HUSKY_DEBUG")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"husky (debug) - '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v('"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("readonly")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("hook_name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("basename")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v("\n  debug "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"starting '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$hook_name")]),s._v('..."')]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$HUSKY")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    debug "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"HUSKY env variable is set to 0, skipping hook"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" ~/.huskyrc "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    debug "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sourcing ~/.huskyrc"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" ~/.huskyrc\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("readonly")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("husky_skip_init")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$@")]),s._v('"')]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("exitCode")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v('"')]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$exitCode")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"husky - '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$hook_name")]),s._v(" hook exited with code "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$exitCode")]),s._v(' (error)"')]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$exitCode")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br")])]),t("ol",{attrs:{start:"4"}},[t("li",[s._v("commit-msg")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/sh")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dirname")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('/_/husky.sh"')]),s._v("\n\nnpx --no-install commitlint "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--edit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# npm commitlint")]),s._v("\n\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("ol",{attrs:{start:"5"}},[t("li",[s._v("pre-commit")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/sh")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dirname")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('/_/husky.sh"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# npx lint-staged")]),s._v("\nnpx eslint "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--fix")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--ext")]),s._v(" .js,.ts,.vue ./src\n\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);