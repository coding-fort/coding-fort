(window.webpackJsonp=window.webpackJsonp||[]).push([[422],{748:function(e,t,s){"use strict";s.r(t);var a=s(25),v=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"vue-相关面试题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue-相关面试题"}},[e._v("#")]),e._v(" Vue 相关面试题")]),e._v(" "),t("h2",{attrs:{id:"_1-vue-的生命周期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-vue-的生命周期"}},[e._v("#")]),e._v(" 1. Vue 的生命周期")]),e._v(" "),t("h3",{attrs:{id:"_1-描述一下对-vue-生命周期的理解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-描述一下对-vue-生命周期的理解"}},[e._v("#")]),e._v(" （1）描述一下对 Vue 生命周期的理解")]),e._v(" "),t("div",{staticClass:"language-md line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-md"}},[t("code",[t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("1.")]),e._v(" Vue 实例从创建到销毁的过程，称为生命周期。\n"),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("2.")]),e._v(" Vue 的生命周期包括以下阶段：\n   "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" 创建阶段（4 个）\n     "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" beforeCreate：组件实例刚刚被创建，此时组件的 data 和 methods 还没有初始化\n     "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" created：组件实例已经创建完成，此时组件的 data 和 methods 已经初始化\n     "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" beforeMount：组件刚刚被挂载到 DOM 上，此时组件的模板还没有被渲染\n     "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" mounted：组件已经被挂载到 DOM 上，此时组件的模板已经被渲染\n   "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" 更新阶段（2 个）\n     "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" beforeUpdate：组件刚刚被更新，此时组件的 data 已经更新，但是模板还没有被渲染\n     "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" updated：组件已经被更新，此时组件的 data 已经更新，模板已经被渲染\n   "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" 销毁阶段（2 个）\n     "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" beforeDestroy：组件刚刚被销毁，此时组件的 data 和 methods 还没有销毁\n     "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" destroyed：组件已经被销毁，此时组件的 data 和 methods 已经销毁\n   "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" keep-alive（2 个）\n     "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" activated：组件被激活时调用\n     "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" deactivated：组件被失活时调用\n   "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" 异常捕获（1 个）\n     "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" errorCaptured：当捕获到后代组件的错误时调用\n"),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("3.")]),e._v(" Vue 3 组合式 API\n   "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" onBeforeMount: 相当于 beforeMount。\n   "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" onMounted: 相当于 mounted。\n   "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" onBeforeUpdate: 相当于 beforeUpdate。\n   "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" onUpdated: 相当于 updated。\n   "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" onBeforeUnmount: 相当于 beforeUnmount。\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br"),t("span",{staticClass:"line-number"},[e._v("21")]),t("br"),t("span",{staticClass:"line-number"},[e._v("22")]),t("br"),t("span",{staticClass:"line-number"},[e._v("23")]),t("br"),t("span",{staticClass:"line-number"},[e._v("24")]),t("br")])]),t("h2",{attrs:{id:"_2-vue-的双向数据绑定"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-vue-的双向数据绑定"}},[e._v("#")]),e._v(" 2. Vue 的双向数据绑定")]),e._v(" "),t("h3",{attrs:{id:"_1-vue-的双向数据绑定原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-vue-的双向数据绑定原理"}},[e._v("#")]),e._v(" （1）Vue 的双向数据绑定原理")]),e._v(" "),t("div",{staticClass:"language-md line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-md"}},[t("code",[e._v("Vue.js 的双向数据绑定机制是其核心特性之一，它让开发者能够轻松地在视图（View）和模型（Model）之间同步数据。在 Vue.js 中，双向数据绑定主要通过以下几个关键概念和技术实现：\n\n"),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("1.")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token bold"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("**")]),t("span",{pre:!0,attrs:{class:"token content"}},[e._v("响应式系统")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("**")])]),e._v("：\n\n   "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" Vue.js 使用一种基于数据观察的响应式系统来追踪数据的变化。\n   "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" 当数据发生变化时，与之相关联的视图会自动更新。\n   "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" Vue 会利用 JavaScript 的 Object.defineProperty() 方法来把数据对象的属性转换成 getter/setter。\n\n"),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("2.")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token bold"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("**")]),t("span",{pre:!0,attrs:{class:"token content"}},[e._v("数据劫持")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("**")])]),e._v("：\n\n   "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" Vue 会在初始化时遍历 data 对象中的所有属性，并使用 Object.defineProperty() 来将其转换为 getter/setter 形式的属性。\n   "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" getter 用于获取数据值，setter 用于设置数据值并触发依赖更新。\n   "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" 当一个属性被访问时，Vue 会记录这个依赖关系；当该属性被修改时，Vue 会通知所有依赖它的组件重新渲染。\n\n"),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("3.")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token bold"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("**")]),t("span",{pre:!0,attrs:{class:"token content"}},[e._v("依赖收集与更新")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("**")])]),e._v("：\n\n   "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" 当渲染函数执行时，它会遍历 data 对象中的属性，并将这些属性添加到依赖列表中。\n   "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" 每个观察者都有一个依赖列表，当数据变化时，会触发对应的观察者去更新它们所关联的 DOM 元素。\n\n"),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("4.")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token bold"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("**")]),t("span",{pre:!0,attrs:{class:"token content"}},[e._v("Watcher 观察者")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("**")])]),e._v("：\n\n   "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" Watcher 是 Vue 中的一个核心类，它负责更新视图。\n   "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" 当数据变化时，setter 函数会被调用，并且通知所有依赖该数据的 Watcher 进行更新。\n   "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" Watcher 会跟踪依赖并在数据变化时执行更新视图的方法。\n\n"),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("5.")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token bold"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("**")]),t("span",{pre:!0,attrs:{class:"token content"}},[e._v("指令（Directives）")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("**")])]),e._v("：\n\n   "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" Vue 提供了多种内置指令，如 v-model 和 v-bind。\n   "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" v-model 是一个特殊的指令，它实现了表单控件的双向数据绑定。\n   "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" 当用户在输入框中输入数据时，v-model 会监听 input 事件，并更新 data 中的数据。\n   "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" 同样地，当 data 中的数据发生变化时，v-model 会更新表单控件的值。\n\n"),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("6.")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token bold"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("**")]),t("span",{pre:!0,attrs:{class:"token content"}},[e._v("脏检查（Dirty Checking）")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("**")])]),e._v("：\n   "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" Vue.js 不使用脏检查（AngularJS 中的一种机制），而是采用了更高效的依赖追踪和异步队列机制。\n   "),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("-")]),e._v(" 当数据改变时，Vue 会异步执行渲染函数以更新视图，而不是立即更新。\n\n总结来说，Vue.js 的双向数据绑定是通过数据劫持结合发布订阅模式来实现的。当数据发生变化时，Vue 会自动更新 DOM，而不需要显式地调用任何方法。\n\n在面试中，你可以通过解释上述原理来展示你对 Vue.js 内部机制的理解。此外，还可以简单说明 Vue.js 如何优化性能，比如通过异步更新队列避免不必要的重绘和回流。\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br"),t("span",{staticClass:"line-number"},[e._v("21")]),t("br"),t("span",{staticClass:"line-number"},[e._v("22")]),t("br"),t("span",{staticClass:"line-number"},[e._v("23")]),t("br"),t("span",{staticClass:"line-number"},[e._v("24")]),t("br"),t("span",{staticClass:"line-number"},[e._v("25")]),t("br"),t("span",{staticClass:"line-number"},[e._v("26")]),t("br"),t("span",{staticClass:"line-number"},[e._v("27")]),t("br"),t("span",{staticClass:"line-number"},[e._v("28")]),t("br"),t("span",{staticClass:"line-number"},[e._v("29")]),t("br"),t("span",{staticClass:"line-number"},[e._v("30")]),t("br"),t("span",{staticClass:"line-number"},[e._v("31")]),t("br"),t("span",{staticClass:"line-number"},[e._v("32")]),t("br"),t("span",{staticClass:"line-number"},[e._v("33")]),t("br"),t("span",{staticClass:"line-number"},[e._v("34")]),t("br"),t("span",{staticClass:"line-number"},[e._v("35")]),t("br"),t("span",{staticClass:"line-number"},[e._v("36")]),t("br"),t("span",{staticClass:"line-number"},[e._v("37")]),t("br"),t("span",{staticClass:"line-number"},[e._v("38")]),t("br"),t("span",{staticClass:"line-number"},[e._v("39")]),t("br")])]),t("ol",[t("li",[e._v("通过 Object.defineProperty() 方法，对数据进行劫持（getter 和 setter）")]),e._v(" "),t("li",[e._v("当数据发生变化时，触发 setter，通知视图更新")]),e._v(" "),t("li",[e._v("当视图发生变化时，触发 getter，通知数据更新")])]),e._v(" "),t("h2",{attrs:{id:"_3-vue-的组件通信方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-vue-的组件通信方式"}},[e._v("#")]),e._v(" 3. Vue 的组件通信方式")]),e._v(" "),t("ol",[t("li",[e._v("父子组件通信：props 和 $emit")]),e._v(" "),t("li",[e._v("兄弟组件通信：eventBus 或 Vuex")]),e._v(" "),t("li",[e._v("跨级组件通信：provide 和 inject")]),e._v(" "),t("li",[e._v("任意组件通信：Vuex")])]),e._v(" "),t("h2",{attrs:{id:"_4-vue-的路由守卫"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-vue-的路由守卫"}},[e._v("#")]),e._v(" 4. Vue 的路由守卫")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("全局守卫：beforeEach 和 afterEach")])]),e._v(" "),t("li",[t("p",[e._v("路由独享守卫：beforeEnter")])]),e._v(" "),t("li",[t("p",[e._v("组件内守卫：beforeRouteEnter、beforeRouteUpdate 和 beforeRouteLeave")])])]),e._v(" "),t("h2",{attrs:{id:"_5-vue-的-computed-和-watch-的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-vue-的-computed-和-watch-的区别"}},[e._v("#")]),e._v(" 5. Vue 的 computed 和 watch 的区别")]),e._v(" "),t("ol",[t("li",[e._v("computed 是计算属性，具有缓存功能，只有当依赖的属性发生变化时，才会重新计算")]),e._v(" "),t("li",[e._v("watch 是监听属性，当监听的属性发生变化时，会执行相应的回调函数")]),e._v(" "),t("li",[e._v("computed 一般用于同步操作，watch 一般用于异步操作")])]),e._v(" "),t("h2",{attrs:{id:"_6-vue-的-diff-算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-vue-的-diff-算法"}},[e._v("#")]),e._v(" 6. Vue 的 diff 算法")]),e._v(" "),t("ol",[t("li",[e._v("diff 算法是 Vue 的虚拟 DOM 的核心算法，用于比较新旧虚拟 DOM 的差异，并生成补丁")]),e._v(" "),t("li",[e._v("diff 算法的时间复杂度为 O(n)，其中 n 是虚拟 DOM 的节点数")]),e._v(" "),t("li",[e._v("diff 算法的核心思想是：只比较同一层级的节点，不跨层级比较")])]),e._v(" "),t("h2",{attrs:{id:"_7-vue-的-keep-alive-组件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-vue-的-keep-alive-组件"}},[e._v("#")]),e._v(" 7. Vue 的 keep-alive 组件")]),e._v(" "),t("ol",[t("li",[e._v("keep-alive 组件是 Vue 的内置组件，用于缓存组件的状态")]),e._v(" "),t("li",[e._v("keep-alive 组件有两个属性：include 和 exclude，用于指定需要缓存的组件和不需要缓存的组件")]),e._v(" "),t("li",[e._v("keep-alive 组件有两个生命周期钩子函数：activated 和 deactivated，分别用于组件激活和失活时执行相应的操作")])]),e._v(" "),t("h2",{attrs:{id:"_8-vue-的异步组件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-vue-的异步组件"}},[e._v("#")]),e._v(" 8. Vue 的异步组件")]),e._v(" "),t("ol",[t("li",[e._v("异步组件是 Vue 的内置组件，用于按需加载组件，提高应用的性能")]),e._v(" "),t("li",[e._v("异步组件可以通过 Vue.component() 方法注册，也可以在组件的 components 选项中定义")]),e._v(" "),t("li",[e._v("异步组件可以通过 webpack 的 require.ensure() 方法实现按需加载")])]),e._v(" "),t("h2",{attrs:{id:"_9-vue-的-nexttick-方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-vue-的-nexttick-方法"}},[e._v("#")]),e._v(" 9. Vue 的 nextTick 方法")]),e._v(" "),t("ol",[t("li",[e._v("nextTick 方法是 Vue 的内置方法，用于在下次 DOM 更新循环结束之后执行延迟回调")]),e._v(" "),t("li",[e._v("nextTick 方法可以用于在数据更新后，获取更新后的 DOM")]),e._v(" "),t("li",[e._v("nextTick 方法可以用于在数据更新后，执行异步操作")])]),e._v(" "),t("h2",{attrs:{id:"_10-vue-的-ssr-服务器端渲染"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-vue-的-ssr-服务器端渲染"}},[e._v("#")]),e._v(" 10. Vue 的 SSR（服务器端渲染）")]),e._v(" "),t("ol",[t("li",[e._v("SSR 是 Vue 的服务器端渲染技术，可以将 Vue 组件渲染为 HTML，提高应用的性能和 SEO")]),e._v(" "),t("li",[e._v("SSR 可以通过 vue-server-renderer 包实现")]),e._v(" "),t("li",[e._v("SSR 可以用于单页面应用和服务器端渲染应用")])]),e._v(" "),t("h2",{attrs:{id:"_11-vue-的插件系统"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_11-vue-的插件系统"}},[e._v("#")]),e._v(" 11. Vue 的插件系统")]),e._v(" "),t("ol",[t("li",[e._v("Vue 的插件系统是 Vue 的核心功能之一，用于扩展 Vue 的功能")]),e._v(" "),t("li",[e._v("Vue 的插件可以通过 Vue.use() 方法注册，也可以在 Vue 实例的 options 选项中定义")]),e._v(" "),t("li",[e._v("Vue 的插件可以用于扩展 Vue 的全局方法、指令、过滤器、组件等")])]),e._v(" "),t("h2",{attrs:{id:"_12-vue-的自定义指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_12-vue-的自定义指令"}},[e._v("#")]),e._v(" 12. Vue 的自定义指令")]),e._v(" "),t("ol",[t("li",[e._v("Vue 的自定义指令是 Vue 的内置功能之一，用于扩展 Vue 的功能")]),e._v(" "),t("li",[e._v("Vue 的自定义指令可以通过 Vue.directive() 方法注册，也可以在组件的 directives 选项中定义")]),e._v(" "),t("li",[e._v("Vue 的自定义指令可以用于操作 DOM、绑定事件、监听属性等")])]),e._v(" "),t("h2",{attrs:{id:"_13-vue-的过渡动画"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_13-vue-的过渡动画"}},[e._v("#")]),e._v(" 13. Vue 的过渡动画")]),e._v(" "),t("ol",[t("li",[e._v("Vue 的过渡动画是 Vue 的内置功能之一，用于实现组件的过渡效果")]),e._v(" "),t("li",[e._v("Vue 的过渡动画可以通过 transition 组件实现，也可以通过 transition-group 组件实现")]),e._v(" "),t("li",[e._v("Vue 的过渡动画可以用于实现组件的进入、离开、列表的过渡效果等")])]),e._v(" "),t("h2",{attrs:{id:"_14-vue-的错误处理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_14-vue-的错误处理"}},[e._v("#")]),e._v(" 14. Vue 的错误处理")]),e._v(" "),t("ol",[t("li",[e._v("Vue 的错误处理是 Vue 的内置功能之一，用于捕获组件的错误")]),e._v(" "),t("li",[e._v("Vue 的错误处理可以通过 errorCaptured 钩子函数实现")]),e._v(" "),t("li",[e._v("Vue 的错误处理可以用于记录错误日志、发送错误报告等")])]),e._v(" "),t("h2",{attrs:{id:"_15-vue-的性能优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_15-vue-的性能优化"}},[e._v("#")]),e._v(" 15. Vue 的性能优化")]),e._v(" "),t("ol",[t("li",[e._v("Vue 的性能优化是 Vue 的核心功能之一，用于提高应用的性能")]),e._v(" "),t("li",[e._v("Vue 的性能优化可以通过以下方式实现：\n"),t("ul",[t("li",[e._v("使用虚拟 DOM")]),e._v(" "),t("li",[e._v("使用计算属性和侦听器")]),e._v(" "),t("li",[e._v("使用 keep-alive 组件")]),e._v(" "),t("li",[e._v("使用异步组件")]),e._v(" "),t("li",[e._v("使用懒加载")]),e._v(" "),t("li",[e._v("使用事件委托")]),e._v(" "),t("li",[e._v("使用 v-if 和 v-show")]),e._v(" "),t("li",[e._v("使用 v-for 的 key 属性")]),e._v(" "),t("li",[e._v("使用 v-once 指令")]),e._v(" "),t("li",[e._v("使用 v-cloak 指令")]),e._v(" "),t("li",[e._v("使用 v-pre 指令")]),e._v(" "),t("li",[e._v("使用 v-once 指令")]),e._v(" "),t("li",[e._v("使用 v-cloak 指令")]),e._v(" "),t("li",[e._v("使用 v-pre 指令")])])])]),e._v(" "),t("h2",{attrs:{id:"_16-vue-的生命周期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_16-vue-的生命周期"}},[e._v("#")]),e._v(" 16. Vue 的生命周期")]),e._v(" "),t("ol",[t("li",[e._v("Vue 的生命周期是 Vue 的核心功能之一，用于管理组件的创建、更新和销毁")]),e._v(" "),t("li",[e._v("Vue 的生命周期包括以下阶段：\n"),t("ul",[t("li",[e._v("beforeCreate：组件实例刚刚被创建，此时组件的 data 和 methods 还没有初始化")]),e._v(" "),t("li",[e._v("created：组件实例已经创建完成，此时组件的 data 和 methods 已经初始化")]),e._v(" "),t("li",[e._v("beforeMount：组件刚刚被挂载到 DOM 上，此时组件的模板还没有被渲染")]),e._v(" "),t("li",[e._v("mounted：组件已经被挂载到 DOM 上，此时组件的模板已经被渲染")]),e._v(" "),t("li",[e._v("beforeUpdate：组件刚刚被更新，此时组件的 data 已经更新，但是模板还没有被渲染")]),e._v(" "),t("li",[e._v("updated：组件已经被更新，此时组件的 data 已经更新，模板已经被渲染")]),e._v(" "),t("li",[e._v("beforeDestroy：组件刚刚被销毁，此时组件的 data 和 methods 还没有销毁")]),e._v(" "),t("li",[e._v("destroyed：组件已经被销毁，此时组件的 data 和 methods 已经销毁")])])])]),e._v(" "),t("h2",{attrs:{id:"_17-vue-的路由"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17-vue-的路由"}},[e._v("#")]),e._v(" 17. Vue 的路由")]),e._v(" "),t("ol",[t("li",[e._v("Vue 的路由是 Vue 的核心功能之一，用于实现单页面应用的路由功能")]),e._v(" "),t("li",[e._v("Vue 的路由可以通过 vue-router 包实现")]),e._v(" "),t("li",[e._v("Vue 的路由可以用于实现页面跳转、参数传递、路由守卫等功能")])]),e._v(" "),t("h2",{attrs:{id:"_18-vue-的状态管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_18-vue-的状态管理"}},[e._v("#")]),e._v(" 18. Vue 的状态管理")]),e._v(" "),t("ol",[t("li",[e._v("Vue 的状态管理是 Vue 的核心功能之一，用于管理组件之间的状态")]),e._v(" "),t("li",[e._v("Vue 的状态管理可以通过 Vuex 包实现")]),e._v(" "),t("li",[e._v("Vue 的状态管理可以用于实现全局状态管理、组件通信等功能")])]),e._v(" "),t("h2",{attrs:{id:"_19-vue-的表单验证"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_19-vue-的表单验证"}},[e._v("#")]),e._v(" 19. Vue 的表单验证")]),e._v(" "),t("ol",[t("li",[e._v("Vue 的表单验证是 Vue 的核心功能之一，用于验证表单输入的有效性")]),e._v(" "),t("li",[e._v("Vue 的表单验证可以通过 vee-validate 包实现")]),e._v(" "),t("li",[e._v("Vue 的表单验证可以用于实现表单验证、错误提示等功能")])]),e._v(" "),t("h2",{attrs:{id:"_20-vue-的权限管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_20-vue-的权限管理"}},[e._v("#")]),e._v(" 20. Vue 的权限管理")]),e._v(" "),t("ol",[t("li",[e._v("Vue 的权限管理是 Vue 的核心功能之一，用于控制用户对页面的访问权限")]),e._v(" "),t("li",[e._v("Vue 的权限管理可以通过 vue-router 和 Vuex 实现")]),e._v(" "),t("li",[e._v("Vue 的权限管理可以用于实现页面权限控制、按钮权限控制等功能")])]),e._v(" "),t("h2",{attrs:{id:"_21-vue-的单元测试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_21-vue-的单元测试"}},[e._v("#")]),e._v(" 21. Vue 的单元测试")]),e._v(" "),t("ol",[t("li",[e._v("Vue 的单元测试是 Vue 的核心功能之一，用于测试组件的功能和性能")]),e._v(" "),t("li",[e._v("Vue 的单元测试可以通过 jest 和 vue-test-utils 包实现")]),e._v(" "),t("li",[e._v("Vue 的单元测试可以用于实现组件的单元测试、性能测试等功能")])]),e._v(" "),t("h2",{attrs:{id:"_22-vue-的性能监控"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_22-vue-的性能监控"}},[e._v("#")]),e._v(" 22. Vue 的性能监控")]),e._v(" "),t("ol",[t("li",[e._v("Vue 的性能监控是 Vue 的核心功能之一，用于监控应用的性能")]),e._v(" "),t("li",[e._v("Vue 的性能监控可以通过 vue-perf-devtools 包实现")]),e._v(" "),t("li",[e._v("Vue 的性能监控可以用于实现应用的性能监控、性能优化等功能")])]),e._v(" "),t("h2",{attrs:{id:"_23-vue-的-seo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_23-vue-的-seo"}},[e._v("#")]),e._v(" 23. Vue 的 SEO")]),e._v(" "),t("ol",[t("li",[e._v("Vue 的 SEO 是 Vue 的核心功能之一，用于优化应用的搜索引擎优化")]),e._v(" "),t("li",[e._v("Vue 的 SEO 可以通过 vue-meta 包实现")]),e._v(" "),t("li",[e._v("Vue 的 SEO 可以用于实现应用的 SEO 优化、搜索引擎优化等功能")])]),e._v(" "),t("h2",{attrs:{id:"_24-vue-的服务端渲染"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_24-vue-的服务端渲染"}},[e._v("#")]),e._v(" 24. Vue 的服务端渲染")]),e._v(" "),t("ol",[t("li",[e._v("Vue 的服务端渲染是 Vue 的核心功能之一，用于实现应用的预渲染")]),e._v(" "),t("li",[e._v("Vue 的服务端渲染可以通过 vue-server-renderer 包实现")]),e._v(" "),t("li",[e._v("Vue 的服务端渲染可以用于实现应用的预渲染、SEO 优化等功能")])]),e._v(" "),t("h2",{attrs:{id:"_25-vue-的插件系统"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_25-vue-的插件系统"}},[e._v("#")]),e._v(" 25. Vue 的插件系统")]),e._v(" "),t("ol",[t("li",[e._v("Vue 的插件系统是 Vue 的核心功能之一，用于扩展 Vue 的功能")]),e._v(" "),t("li",[e._v("Vue 的插件系统可以通过 vue.use() 方法实现")]),e._v(" "),t("li",[e._v("Vue 的插件系统可以用于实现 Vue 的插件、插件开发等功能")])]),e._v(" "),t("h2",{attrs:{id:"_26-vue-的自定义指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_26-vue-的自定义指令"}},[e._v("#")]),e._v(" 26. Vue 的自定义指令")]),e._v(" "),t("ol",[t("li",[e._v("Vue 的自定义指令是 Vue 的核心功能之一，用于扩展 Vue 的功能")]),e._v(" "),t("li",[e._v("Vue 的自定义指令可以通过 Vue.directive() 方法实现")]),e._v(" "),t("li",[e._v("Vue 的自定义指令可以用于实现 Vue 的自定义指令、指令开发等功能")])]),e._v(" "),t("h2",{attrs:{id:"_27-vue-的插件开发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_27-vue-的插件开发"}},[e._v("#")]),e._v(" 27. Vue 的插件开发")]),e._v(" "),t("ol",[t("li",[e._v("Vue 的插件开发是 Vue 的核心功能之一，用于开发 Vue 的插件")]),e._v(" "),t("li",[e._v("Vue 的插件开发可以通过 vue.use() 方法实现")]),e._v(" "),t("li",[e._v("Vue 的插件开发可以用于实现 Vue 的插件、插件开发等功能")])]),e._v(" "),t("h2",{attrs:{id:"_28-vue-的指令开发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_28-vue-的指令开发"}},[e._v("#")]),e._v(" 28. Vue 的指令开发")]),e._v(" "),t("ol",[t("li",[e._v("Vue 的指令开发是 Vue 的核心功能之一，用于开发 Vue 的指令")]),e._v(" "),t("li",[e._v("Vue 的指令开发可以通过 Vue.directive() 方法实现")]),e._v(" "),t("li",[e._v("Vue 的指令开发可以用于实现 Vue 的自定义指令、指令开发等功能")])]),e._v(" "),t("h2",{attrs:{id:"_29-vue-的组件开发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_29-vue-的组件开发"}},[e._v("#")]),e._v(" 29. Vue 的组件开发")]),e._v(" "),t("ol",[t("li",[e._v("Vue 的组件开发是 Vue 的核心功能之一，用于开发 Vue 的组件")]),e._v(" "),t("li",[e._v("Vue 的组件开发可以通过 Vue.component() 方法实现")]),e._v(" "),t("li",[e._v("Vue 的组件开发可以用于实现 Vue 的组件、组件开发等功能")])]),e._v(" "),t("h2",{attrs:{id:"_30-vue-的路由开发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_30-vue-的路由开发"}},[e._v("#")]),e._v(" 30. Vue 的路由开发")]),e._v(" "),t("ol",[t("li",[e._v("Vue 的路由开发是 Vue 的核心功能之一，用于开发 Vue 的路由")]),e._v(" "),t("li",[e._v("Vue 的路由开发可以通过 vue-router 包实现")]),e._v(" "),t("li",[e._v("Vue 的路由开发可以用于实现 Vue 的路由、路由开发等功能")])]),e._v(" "),t("h2",{attrs:{id:"_31-vue-的状态管理开发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_31-vue-的状态管理开发"}},[e._v("#")]),e._v(" 31. Vue 的状态管理开发")]),e._v(" "),t("ol",[t("li",[e._v("Vue 的状态管理开发是 Vue 的核心功能之一，用于开发 Vue 的状态管理")]),e._v(" "),t("li",[e._v("Vue 的状态管理开发可以通过 Vuex 包实现")]),e._v(" "),t("li",[e._v("Vue 的状态管理开发可以用于实现 Vue 的状态管理、状态管理开发等功能")])]),e._v(" "),t("h2",{attrs:{id:"_32-vue-的表单验证开发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_32-vue-的表单验证开发"}},[e._v("#")]),e._v(" 32. Vue 的表单验证开发")]),e._v(" "),t("ol",[t("li",[e._v("Vue 的表单验证开发是 Vue 的核心功能之一，用于开发 Vue 的表单验证")]),e._v(" "),t("li",[e._v("Vue 的表单验证开发可以通过 vee-validate 包实现")]),e._v(" "),t("li",[e._v("Vue 的表单验证开发可以用于实现 Vue 的表单验证、表单验证开发等功能")])]),e._v(" "),t("h2",{attrs:{id:"_33-vue-的权限管理开发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_33-vue-的权限管理开发"}},[e._v("#")]),e._v(" 33. Vue 的权限管理开发")]),e._v(" "),t("ol",[t("li",[e._v("Vue 的权限管理开发是 Vue 的核心功能之一，用于开发 Vue 的权限管理")]),e._v(" "),t("li",[e._v("Vue 的权限管理开发可以通过 vue-router 和 Vuex 实现")]),e._v(" "),t("li",[e._v("Vue 的权限管理开发可以用于实现 Vue 的权限管理、权限管理开发等功能")])]),e._v(" "),t("h2",{attrs:{id:"_34-vue-的单元测试开发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_34-vue-的单元测试开发"}},[e._v("#")]),e._v(" 34. Vue 的单元测试开发")]),e._v(" "),t("ol",[t("li",[e._v("Vue 的单元测试开发是 Vue 的核心功能之一，用于开发 Vue 的单元测试")]),e._v(" "),t("li",[e._v("Vue 的单元测试开发可以通过 jest 和 vue-test-utils 包实现")]),e._v(" "),t("li",[e._v("Vue 的单元测试开发可以用于实现 Vue 的单元测试、单元测试开发等功能")])]),e._v(" "),t("h2",{attrs:{id:"_35-vue-的性能监控开发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_35-vue-的性能监控开发"}},[e._v("#")]),e._v(" 35. Vue 的性能监控开发")]),e._v(" "),t("ol",[t("li",[e._v("Vue 的性能监控开发是 Vue 的核心功能之一，用于开发 Vue 的性能监控")]),e._v(" "),t("li",[e._v("Vue 的性能监控开发可以通过 vue-perf-devtools 包实现")]),e._v(" "),t("li",[e._v("Vue 的性能监控开发可以用于实现 Vue 的性能监控、性能监控开发等功能")])]),e._v(" "),t("h2",{attrs:{id:"_36-vue-的-seo-开发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_36-vue-的-seo-开发"}},[e._v("#")]),e._v(" 36. Vue 的 SEO 开发")]),e._v(" "),t("ol",[t("li",[e._v("Vue 的 SEO 开发是 Vue 的核心功能之一，用于开发 Vue 的 SEO")]),e._v(" "),t("li",[e._v("Vue 的 SEO 开发可以通过 vue-meta 包实现")]),e._v(" "),t("li",[e._v("Vue 的 SEO 开发可以用于实现 Vue 的 SEO、SEO 开发等功能")])]),e._v(" "),t("h2",{attrs:{id:"_37-vue-的服务端渲染开发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_37-vue-的服务端渲染开发"}},[e._v("#")]),e._v(" 37. Vue 的服务端渲染开发")]),e._v(" "),t("ol",[t("li",[e._v("Vue 的服务端渲染开发是 Vue 的核心功能之一，用于开发 Vue 的服务端渲染")]),e._v(" "),t("li",[e._v("Vue 的服务端渲染开发可以通过 vue-server-renderer 包实现")]),e._v(" "),t("li",[e._v("Vue 的服务端渲染开发可以用于实现 Vue 的服务端渲染、服务端渲染开发等功能")])]),e._v(" "),t("h2",{attrs:{id:"_38-vue-的插件开发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_38-vue-的插件开发"}},[e._v("#")]),e._v(" 38. Vue 的插件开发")]),e._v(" "),t("ol",[t("li",[e._v("Vue 的插件开发是 Vue 的核心功能之一，用于开发 Vue 的插件")]),e._v(" "),t("li",[e._v("Vue 的插件开发可以通过 vue.use() 方法实现")]),e._v(" "),t("li",[e._v("Vue 的插件开发可以用于实现 Vue 的插件、插件开发等功能")])]),e._v(" "),t("h2",{attrs:{id:"_39-vue-的自定义指令开发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_39-vue-的自定义指令开发"}},[e._v("#")]),e._v(" 39. Vue 的自定义指令开发")]),e._v(" "),t("ol",[t("li",[e._v("Vue 的自定义指令开发是 Vue 的核心功能之一，用于开发 Vue 的自定义指令")]),e._v(" "),t("li",[e._v("Vue 的自定义指令开发可以通过 Vue.directive() 方法实现")]),e._v(" "),t("li",[e._v("Vue 的自定义指令开发可以用于实现 Vue 的自定义指令、指令开发等功能")])])])}),[],!1,null,null,null);t.default=v.exports}}]);