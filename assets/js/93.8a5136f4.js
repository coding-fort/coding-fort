(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{416:function(s,_,t){"use strict";t.r(_);var a=t(25),v=Object(a.a)({},(function(){var s=this,_=s._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[_("h1",{attrs:{id:"pnpm"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#pnpm"}},[s._v("#")]),s._v(" pnpm")]),s._v(" "),_("p",[_("code",[s._v("pnpm")]),s._v(" 是一个现代的包管理工具，旨在通过创新的方式优化依赖安装和管理流程。它解决了传统包管理器（如 "),_("code",[s._v("npm")]),s._v(" 和 "),_("code",[s._v("Yarn")]),s._v("）中的一些性能和磁盘空间使用问题，并引入了独特的"),_("prib",[s._v("“软链接”")]),s._v("机制来提高效率。以下是关于 "),_("code",[s._v("pnpm")]),s._v(" 的详细介绍，包括其特性、优势以及如何使用。")],1),s._v(" "),_("h2",{attrs:{id:"_1-pnpm-的主要特点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-pnpm-的主要特点"}},[s._v("#")]),s._v(" 1.pnpm 的主要特点")]),s._v(" "),_("h3",{attrs:{id:"_1-1-节省磁盘空间"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-节省磁盘空间"}},[s._v("#")]),s._v(" 1.1. "),_("strong",[s._v("节省磁盘空间")])]),s._v(" "),_("ul",[_("li",[_("strong",[s._v("全局存储")]),s._v("："),_("code",[s._v("pnpm")]),s._v(" 使用一个全局存储区域（通常位于用户主目录下的 "),_("code",[s._v(".pnpm-store")]),s._v(" 文件夹），所有安装的包都会被放置在这里。每个版本的包只会被下载一次。")]),s._v(" "),_("li",[_("strong",[s._v("符号链接")]),s._v("：当项目需要某个包时，"),_("code",[s._v("pnpm")]),s._v(" 会在项目的 "),_("code",[s._v("node_modules")]),s._v(" 目录中创建指向全局存储区域的符号链接，而不是复制整个包的内容。这大大减少了磁盘占用，并且加快了安装速度。")])]),s._v(" "),_("h3",{attrs:{id:"_1-2-快速安装"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-快速安装"}},[s._v("#")]),s._v(" 1.2. "),_("strong",[s._v("快速安装")])]),s._v(" "),_("ul",[_("li",[_("strong",[s._v("并行下载")]),s._v("：类似于 "),_("code",[s._v("Yarn")]),s._v("，"),_("code",[s._v("pnpm")]),s._v(" 支持并行下载多个包，从而显著缩短安装时间。")]),s._v(" "),_("li",[_("strong",[s._v("缓存优化")]),s._v("：由于采用了全局存储和符号链接策略，"),_("code",[s._v("pnpm")]),s._v(" 在重复安装相同版本的包时可以立即完成，无需重新下载或解压。")])]),s._v(" "),_("h3",{attrs:{id:"_1-3-严格的依赖解析"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-严格的依赖解析"}},[s._v("#")]),s._v(" 1.3. "),_("strong",[s._v("严格的依赖解析")])]),s._v(" "),_("ul",[_("li",[_("strong",[s._v("确定性安装")]),s._v("：每次运行 "),_("code",[s._v("pnpm install")]),s._v(" 都会产生相同的结果，确保团队成员之间的一致性。")]),s._v(" "),_("li",[_("strong",[s._v("锁定文件")]),s._v("："),_("code",[s._v("pnpm")]),s._v(" 自动生成 "),_("code",[s._v("pnpm-lock.yaml")]),s._v(" 文件，用于记录确切的依赖版本，防止意外更新带来的不兼容问题。")])]),s._v(" "),_("h3",{attrs:{id:"_1-4-工作区支持"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-工作区支持"}},[s._v("#")]),s._v(" 1.4. "),_("strong",[s._v("工作区支持")])]),s._v(" "),_("ul",[_("li",[_("strong",[s._v("多包管理")]),s._v("：对于 monorepos 或包含多个子项目的大型项目，"),_("code",[s._v("pnpm")]),s._v(" 提供了强大的工作区功能，允许在一个命令中同时处理多个包。")]),s._v(" "),_("li",[_("strong",[s._v("递归命令执行")]),s._v("：可以通过 "),_("code",[s._v("pnpm -r <command>")]),s._v(" 在所有工作区内递归地执行命令，简化跨项目操作。")])]),s._v(" "),_("h3",{attrs:{id:"_1-5-插件系统"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-插件系统"}},[s._v("#")]),s._v(" 1.5. "),_("strong",[s._v("插件系统")])]),s._v(" "),_("ul",[_("li",[_("strong",[s._v("可扩展性")]),s._v("："),_("code",[s._v("pnpm")]),s._v(" 拥有一个活跃的社区和丰富的插件生态系统，用户可以根据需要安装额外的功能模块。")])]),s._v(" "),_("p",[_("bwe",[s._v("由于"),_("code",[s._v("pnmp")]),s._v(" 会改动"),_("code",[s._v("node_modules")]),s._v(" 目录结构，使得每个包只能使用直接依赖，而不能使用间接依赖。")])],1),s._v(" "),_("h2",{attrs:{id:"_2-安装-pnpm"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-安装-pnpm"}},[s._v("#")]),s._v(" 2.安装 pnpm")]),s._v(" "),_("p",[s._v("你可以通过多种方式安装 "),_("code",[s._v("pnpm")]),s._v("，最简单的方法是使用 npm：")]),s._v(" "),_("div",{staticClass:"language-bash line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-bash"}},[_("code",[_("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-g")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[s._v("pnpm")]),s._v("\n")])]),s._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[s._v("1")]),_("br")])]),_("p",[s._v("或者，如果你已经安装了 Node.js，可以直接从 "),_("a",{attrs:{href:"https://pnpm.io/installation",target:"_blank",rel:"noopener noreferrer"}},[s._v("pnpm 官方网站"),_("OutboundLink")],1),s._v(" 获取安装脚本：")]),s._v(" "),_("div",{staticClass:"language-bash line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-bash"}},[_("code",[_("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-fsSL")]),s._v(" https://get.pnpm.io/install.sh "),_("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" -\n")])]),s._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[s._v("1")]),_("br")])]),_("h2",{attrs:{id:"_3-使用-pnpm"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-使用-pnpm"}},[s._v("#")]),s._v(" 3.使用 pnpm")]),s._v(" "),_("p",[s._v("一旦安装完成，你就可以用 "),_("code",[s._v("pnpm")]),s._v(" 来替代 "),_("code",[s._v("npm")]),s._v(" 或 "),_("code",[s._v("Yarn")]),s._v(" 执行各种命令。例如：")]),s._v(" "),_("div",{staticClass:"language-bash line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-bash"}},[_("code",[_("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 初始化项目")]),s._v("\n"),_("span",{pre:!0,attrs:{class:"token function"}},[s._v("pnpm")]),s._v(" init\n\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装依赖")]),s._v("\n"),_("span",{pre:!0,attrs:{class:"token function"}},[s._v("pnpm")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装特定包")]),s._v("\n"),_("span",{pre:!0,attrs:{class:"token function"}},[s._v("pnpm")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("package-name"),_("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装开发依赖")]),s._v("\n"),_("span",{pre:!0,attrs:{class:"token function"}},[s._v("pnpm")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("package-name"),_("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" --save-dev\n\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行脚本")]),s._v("\n"),_("span",{pre:!0,attrs:{class:"token function"}},[s._v("pnpm")]),s._v(" run "),_("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("script-name"),_("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[s._v("1")]),_("br"),_("span",{staticClass:"line-number"},[s._v("2")]),_("br"),_("span",{staticClass:"line-number"},[s._v("3")]),_("br"),_("span",{staticClass:"line-number"},[s._v("4")]),_("br"),_("span",{staticClass:"line-number"},[s._v("5")]),_("br"),_("span",{staticClass:"line-number"},[s._v("6")]),_("br"),_("span",{staticClass:"line-number"},[s._v("7")]),_("br"),_("span",{staticClass:"line-number"},[s._v("8")]),_("br"),_("span",{staticClass:"line-number"},[s._v("9")]),_("br"),_("span",{staticClass:"line-number"},[s._v("10")]),_("br"),_("span",{staticClass:"line-number"},[s._v("11")]),_("br"),_("span",{staticClass:"line-number"},[s._v("12")]),_("br"),_("span",{staticClass:"line-number"},[s._v("13")]),_("br"),_("span",{staticClass:"line-number"},[s._v("14")]),_("br")])]),_("h2",{attrs:{id:"_4-配置-pnpm"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-配置-pnpm"}},[s._v("#")]),s._v(" 4.配置 pnpm")]),s._v(" "),_("p",[_("code",[s._v("pnpm")]),s._v(" 默认配置通常已经足够满足大多数需求，但你也可以根据需要进行调整。例如：")]),s._v(" "),_("div",{staticClass:"language-bash line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-bash"}},[_("code",[_("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置默认注册表为官方 npm 源")]),s._v("\n"),_("span",{pre:!0,attrs:{class:"token function"}},[s._v("pnpm")]),s._v(" config "),_("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" registry https://registry.npmjs.org/\n\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看当前配置")]),s._v("\n"),_("span",{pre:!0,attrs:{class:"token function"}},[s._v("pnpm")]),s._v(" config list\n")])]),s._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[s._v("1")]),_("br"),_("span",{staticClass:"line-number"},[s._v("2")]),_("br"),_("span",{staticClass:"line-number"},[s._v("3")]),_("br"),_("span",{staticClass:"line-number"},[s._v("4")]),_("br"),_("span",{staticClass:"line-number"},[s._v("5")]),_("br")])]),_("h2",{attrs:{id:"_5-pnpm-vs-npm-vs-yarn-关键差异"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-pnpm-vs-npm-vs-yarn-关键差异"}},[s._v("#")]),s._v(" 5.pnpm vs npm vs Yarn: 关键差异")]),s._v(" "),_("table",[_("thead",[_("tr",[_("th",[s._v("特性")]),s._v(" "),_("th",[s._v("npm")]),s._v(" "),_("th",[s._v("Yarn")]),s._v(" "),_("th",[s._v("pnpm")])])]),s._v(" "),_("tbody",[_("tr",[_("td",[_("strong",[s._v("安装速度")])]),s._v(" "),_("td",[s._v("较慢（早期版本），v5+ 显著提升")]),s._v(" "),_("td",[s._v("快速")]),s._v(" "),_("td",[s._v("非常快，得益于全局存储和符号链接")])]),s._v(" "),_("tr",[_("td",[_("strong",[s._v("磁盘空间使用")])]),s._v(" "),_("td",[s._v("较高")]),s._v(" "),_("td",[s._v("中等")]),s._v(" "),_("td",[s._v("最低，通过全局存储和符号链接优化")])]),s._v(" "),_("tr",[_("td",[_("strong",[s._v("锁定文件")])]),s._v(" "),_("td",[_("code",[s._v("package-lock.json")]),s._v("（v5+）")]),s._v(" "),_("td",[_("code",[s._v("yarn.lock")])]),s._v(" "),_("td",[_("code",[s._v("pnpm-lock.yaml")])])]),s._v(" "),_("tr",[_("td",[_("strong",[s._v("离线模式")])]),s._v(" "),_("td",[s._v("不支持")]),s._v(" "),_("td",[s._v("支持")]),s._v(" "),_("td",[s._v("支持")])]),s._v(" "),_("tr",[_("td",[_("strong",[s._v("确定性安装")])]),s._v(" "),_("td",[s._v("依赖于 "),_("code",[s._v("package-lock.json")])]),s._v(" "),_("td",[s._v("内置特性")]),s._v(" "),_("td",[s._v("内置特性")])]),s._v(" "),_("tr",[_("td",[_("strong",[s._v("工作区支持")])]),s._v(" "),_("td",[s._v("需要额外配置")]),s._v(" "),_("td",[s._v("内置支持")]),s._v(" "),_("td",[s._v("内置支持")])])])]),s._v(" "),_("h2",{attrs:{id:"_6-pnpm-原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-pnpm-原理"}},[s._v("#")]),s._v(" 6.pnpm 原理")]),s._v(" "),_("p",[_("code",[s._v("pnpm")]),s._v(" 是一种创新的包管理工具，它通过独特的依赖安装和存储机制来优化性能、磁盘空间使用以及依赖解析。以下是 "),_("code",[s._v("pnpm")]),s._v(" 的工作原理及其背后的核心概念。")]),s._v(" "),_("h3",{attrs:{id:"_6-1-pnpm-的核心原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-pnpm-的核心原理"}},[s._v("#")]),s._v(" 6.1.pnpm 的核心原理")]),s._v(" "),_("h4",{attrs:{id:"_6-1-1-全局存储-global-store"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-1-全局存储-global-store"}},[s._v("#")]),s._v(" 6.1.1. "),_("strong",[s._v("全局存储（Global Store）")])]),s._v(" "),_("ul",[_("li",[_("strong",[s._v("单点存储")]),s._v("："),_("code",[s._v("pnpm")]),s._v(" 使用一个全局存储区域（通常位于用户主目录下的 "),_("code",[s._v(".pnpm-store")]),s._v(" 文件夹），所有安装的包都会被放置在这里。每个版本的包只会被下载一次，并且可以被多个项目共享。")]),s._v(" "),_("li",[_("strong",[s._v("节省磁盘空间")]),s._v("：由于包只存一份副本，因此大大减少了磁盘占用。这对于拥有大量依赖项的大型项目尤其有利。")])]),s._v(" "),_("h4",{attrs:{id:"_6-1-2-符号链接-symbolic-links"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-2-符号链接-symbolic-links"}},[s._v("#")]),s._v(" 6.1.2. "),_("strong",[s._v("符号链接（Symbolic Links）")])]),s._v(" "),_("ul",[_("li",[_("p",[_("strong",[s._v("高效引用")]),s._v("：当项目需要某个包时，"),_("code",[s._v("pnpm")]),s._v(" 不会将整个包复制到项目的 "),_("code",[s._v("node_modules")]),s._v(" 目录中，而是在那里创建指向全局存储区域中对应包的符号链接。这不仅加快了安装速度，还确保了不同项目之间的依赖一致性。")])]),s._v(" "),_("li",[_("p",[_("strong",[s._v("保留依赖树结构")]),s._v("：与 "),_("code",[s._v("npm")]),s._v(" 和 "),_("code",[s._v("Yarn")]),s._v(" 不同，"),_("code",[s._v("pnpm")]),s._v(" 在项目的 "),_("code",[s._v("node_modules")]),s._v(" 中保持了原始的依赖树结构。这意味着如果你在命令行中导入模块，路径将是直观的，如 "),_("code",[s._v("node_modules/dep1/node_modules/dep2")]),s._v("，而不是扁平化的结构。")])])]),s._v(" "),_("h4",{attrs:{id:"_6-1-3-严格的依赖解析"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-3-严格的依赖解析"}},[s._v("#")]),s._v(" 6.1.3. "),_("strong",[s._v("严格的依赖解析")])]),s._v(" "),_("ul",[_("li",[_("p",[_("strong",[s._v("确定性安装")]),s._v("：每次运行 "),_("code",[s._v("pnpm install")]),s._v(" 都会产生相同的结果，确保团队成员之间的一致性。"),_("code",[s._v("pnpm")]),s._v(" 自动生成 "),_("code",[s._v("pnpm-lock.yaml")]),s._v(" 文件，用于记录确切的依赖版本，防止意外更新带来的不兼容问题。")])]),s._v(" "),_("li",[_("p",[_("strong",[s._v("锁定文件")]),s._v("："),_("code",[s._v("pnpm-lock.yaml")]),s._v(" 文件包含了详细的依赖信息，包括直接依赖和间接依赖的具体版本号。这保证了即使在不同的环境中，安装的依赖版本也是一致的。")])])]),s._v(" "),_("h4",{attrs:{id:"_6-1-4-并行化与缓存优化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-4-并行化与缓存优化"}},[s._v("#")]),s._v(" 6.1.4. "),_("strong",[s._v("并行化与缓存优化")])]),s._v(" "),_("ul",[_("li",[_("p",[_("strong",[s._v("快速安装")]),s._v("："),_("code",[s._v("pnpm")]),s._v(" 支持并行下载多个包，从而显著缩短安装时间。同时，由于采用了全局存储和符号链接策略，重复安装相同版本的包可以立即完成，无需重新下载或解压。")])]),s._v(" "),_("li",[_("p",[_("strong",[s._v("缓存优化")]),s._v("：除了全局存储外，"),_("code",[s._v("pnpm")]),s._v(" 还利用本地缓存来加速网络请求。如果曾经安装过某个包，即使没有网络连接也可以再次安装。")])])]),s._v(" "),_("h4",{attrs:{id:"_6-1-5-工作区支持"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-5-工作区支持"}},[s._v("#")]),s._v(" 6.1.5. "),_("strong",[s._v("工作区支持")])]),s._v(" "),_("ul",[_("li",[_("p",[_("strong",[s._v("多包管理")]),s._v("：对于 monorepos 或包含多个子项目的大型项目，"),_("code",[s._v("pnpm")]),s._v(" 提供了强大的工作区功能，允许在一个命令中同时处理多个包。这简化了跨项目依赖管理和构建流程。")])]),s._v(" "),_("li",[_("p",[_("strong",[s._v("递归命令执行")]),s._v("：可以通过 "),_("code",[s._v("pnpm -r <command>")]),s._v(" 在所有工作区内递归地执行命令，进一步提升了开发效率。")])])]),s._v(" "),_("h3",{attrs:{id:"_6-2-实现细节"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-实现细节"}},[s._v("#")]),s._v(" 6.2.实现细节")]),s._v(" "),_("h4",{attrs:{id:"_6-2-1-包安装流程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-1-包安装流程"}},[s._v("#")]),s._v(" 6.2.1.包安装流程")]),s._v(" "),_("ol",[_("li",[_("strong",[s._v("解析依赖")]),s._v("：根据 "),_("code",[s._v("package.json")]),s._v(" 和 "),_("code",[s._v("pnpm-lock.yaml")]),s._v(" 文件解析项目所需的所有依赖项。")]),s._v(" "),_("li",[_("strong",[s._v("检查全局存储")]),s._v("：查看全局存储是否已有该版本的包。如果有，则跳过下载步骤；如果没有，则从注册表下载并保存到全局存储。")]),s._v(" "),_("li",[_("strong",[s._v("创建符号链接")]),s._v("：在项目的 "),_("code",[s._v("node_modules")]),s._v(" 目录中为每个依赖项创建指向全局存储中相应位置的符号链接。")]),s._v(" "),_("li",[_("strong",[s._v("更新锁定文件")]),s._v("：安装完成后，更新 "),_("code",[s._v("pnpm-lock.yaml")]),s._v(" 文件以反映最新的依赖信息。")])]),s._v(" "),_("h4",{attrs:{id:"_6-2-2-解决依赖冲突"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-2-解决依赖冲突"}},[s._v("#")]),s._v(" 6.2.2.解决依赖冲突")]),s._v(" "),_("p",[_("code",[s._v("pnpm")]),s._v(" 采用了一种称为“虚拟 "),_("code",[s._v("node_modules")]),s._v("”的技术来解决依赖冲突。具体来说，它会在全局存储中为每个项目创建一个独立的虚拟 "),_("code",[s._v("node_modules")]),s._v(" 目录，在其中组织依赖关系，从而避免了传统方式下可能出现的依赖版本冲突问题。")]),s._v(" "),_("h2",{attrs:{id:"总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),_("p",[_("code",[s._v("pnpm")]),s._v(" 是一个高性能、节省资源并且易于使用的包管理工具，特别适合那些关心磁盘空间和安装速度的开发者。它的独特设计使得在大型项目或 monorepos 中管理依赖变得更加高效。如果你正在寻找一种更先进的解决方案来替代传统的 "),_("code",[s._v("npm")]),s._v(" 或 "),_("code",[s._v("Yarn")]),s._v("，"),_("code",[s._v("pnpm")]),s._v(" 可能是一个很好的选择。如果你还有更多关于 "),_("code",[s._v("pnpm")]),s._v(" 的具体问题或需要进一步的帮助，请随时告诉我！")])])}),[],!1,null,null,null);_.default=v.exports}}]);