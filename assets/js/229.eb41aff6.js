(window.webpackJsonp=window.webpackJsonp||[]).push([[229],{555:function(_,v,t){"use strict";t.r(v);var a=t(25),s=Object(a.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"javascript"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#javascript"}},[_._v("#")]),_._v(" JavaScript")]),_._v(" "),v("p",[_._v("JavaScript 的底层基础概念是理解这门语言如何工作的重要部分。以下是一些关键的基础概念，这些概念对于编写高效和可维护的 JavaScript 代码至关重要：")]),_._v(" "),v("h3",{attrs:{id:"_1-词法结构-lexical-structure"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-词法结构-lexical-structure"}},[_._v("#")]),_._v(" 1. 词法结构（Lexical Structure）")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("标识符")]),_._v("：变量名、函数名等。")]),_._v(" "),v("li",[v("strong",[_._v("关键字")]),_._v("：如 "),v("code",[_._v("var")]),_._v(", "),v("code",[_._v("let")]),_._v(", "),v("code",[_._v("const")]),_._v(", "),v("code",[_._v("function")]),_._v(", "),v("code",[_._v("if")]),_._v(", "),v("code",[_._v("else")]),_._v(", "),v("code",[_._v("for")]),_._v(", "),v("code",[_._v("while")]),_._v(" 等。")]),_._v(" "),v("li",[v("strong",[_._v("字面量")]),_._v("：字符串、数字、布尔值、对象、数组等。")]),_._v(" "),v("li",[v("strong",[_._v("运算符")]),_._v("：算术运算符、比较运算符、逻辑运算符、赋值运算符等。")]),_._v(" "),v("li",[v("strong",[_._v("分隔符")]),_._v("：括号 "),v("code",[_._v("()")]),_._v(", "),v("code",[_._v("{}")]),_._v(", "),v("code",[_._v("[]")]),_._v("；逗号 "),v("code",[_._v(",")]),_._v("；分号 "),v("code",[_._v(";")]),_._v(" 等。")])]),_._v(" "),v("h3",{attrs:{id:"_2-词法作用域-lexical-scoping"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-词法作用域-lexical-scoping"}},[_._v("#")]),_._v(" 2. 词法作用域（Lexical Scoping）")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("全局作用域")]),_._v("：在最外层定义的变量具有全局作用域，可以在整个程序中访问。")]),_._v(" "),v("li",[v("strong",[_._v("函数作用域")]),_._v("：在函数内部定义的变量具有函数作用域，只能在该函数内部访问。")]),_._v(" "),v("li",[v("strong",[_._v("块级作用域")]),_._v("：使用 "),v("code",[_._v("let")]),_._v(" 和 "),v("code",[_._v("const")]),_._v(" 声明的变量具有块级作用域，只在声明它们的块（如 "),v("code",[_._v("{ ... }")]),_._v("）中可见。")]),_._v(" "),v("li",[v("strong",[_._v("闭包")]),_._v("：当一个函数返回另一个函数，并且返回的函数引用了外部函数的局部变量时，就会形成闭包。")])]),_._v(" "),v("h3",{attrs:{id:"_3-执行上下文-execution-context"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-执行上下文-execution-context"}},[_._v("#")]),_._v(" 3. 执行上下文（Execution Context）")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("全局执行上下文")]),_._v("：JavaScript 程序的最外层。")]),_._v(" "),v("li",[v("strong",[_._v("函数执行上下文")]),_._v("：每次函数被调用时创建。")]),_._v(" "),v("li",[v("strong",[_._v("执行上下文的生命周期")]),_._v("：\n"),v("ul",[v("li",[v("strong",[_._v("创建阶段")]),_._v("：初始化变量对象（Variable Object）、设置作用域链（Scope Chain）、确定 "),v("code",[_._v("this")]),_._v(" 值。")]),_._v(" "),v("li",[v("strong",[_._v("执行阶段")]),_._v("：实际执行代码，分配内存给变量和函数，并执行相应的操作。")]),_._v(" "),v("li",[v("strong",[_._v("销毁阶段")]),_._v("：执行完毕后，执行上下文会被销毁，除非有闭包或其他引用保持其存在。")])])])]),_._v(" "),v("h3",{attrs:{id:"_4-变量对象-variable-object"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-变量对象-variable-object"}},[_._v("#")]),_._v(" 4. 变量对象（Variable Object）")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("全局环境中的变量对象")]),_._v("：全局对象（如浏览器中的 "),v("code",[_._v("window")]),_._v(" 或 Node.js 中的 "),v("code",[_._v("global")]),_._v("）。")]),_._v(" "),v("li",[v("strong",[_._v("函数环境中的变量对象")]),_._v("：活动对象（Activation Object），包含函数的参数、局部变量和内部函数。")])]),_._v(" "),v("h3",{attrs:{id:"_5-作用域链-scope-chain"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-作用域链-scope-chain"}},[_._v("#")]),_._v(" 5. 作用域链（Scope Chain）")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("作用域链")]),_._v("：每个执行上下文都有一个关联的作用域链，它是一个由多个变量对象组成的列表。作用域链用于解析标识符（变量名）。")]),_._v(" "),v("li",[v("strong",[_._v("查找过程")]),_._v("：当一个变量被引用时，JavaScript 引擎会从当前执行上下文的变量对象开始查找，如果找不到，则沿着作用域链向上查找，直到找到该变量或到达全局作用域。")])]),_._v(" "),v("h3",{attrs:{id:"_6-this-关键字"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-this-关键字"}},[_._v("#")]),_._v(" 6. "),v("code",[_._v("this")]),_._v(" 关键字")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("全局上下文")]),_._v("："),v("code",[_._v("this")]),_._v(" 指向全局对象（如浏览器中的 "),v("code",[_._v("window")]),_._v(" 或 Node.js 中的 "),v("code",[_._v("global")]),_._v("）。")]),_._v(" "),v("li",[v("strong",[_._v("函数上下文")]),_._v("："),v("code",[_._v("this")]),_._v(" 的值取决于函数的调用方式。\n"),v("ul",[v("li",[v("strong",[_._v("简单调用")]),_._v("："),v("code",[_._v("this")]),_._v(" 指向全局对象。")]),_._v(" "),v("li",[v("strong",[_._v("方法调用")]),_._v("："),v("code",[_._v("this")]),_._v(" 指向调用该方法的对象。")]),_._v(" "),v("li",[v("strong",[_._v("构造函数调用")]),_._v("："),v("code",[_._v("this")]),_._v(" 指向新创建的对象实例。")]),_._v(" "),v("li",[v("strong",[_._v("显式绑定")]),_._v("：使用 "),v("code",[_._v("call")]),_._v(", "),v("code",[_._v("apply")]),_._v(", "),v("code",[_._v("bind")]),_._v(" 方法可以显式地设置 "),v("code",[_._v("this")]),_._v(" 的值。")]),_._v(" "),v("li",[v("strong",[_._v("箭头函数")]),_._v("：箭头函数没有自己的 "),v("code",[_._v("this")]),_._v("，它继承自外层作用域。")])])])]),_._v(" "),v("h3",{attrs:{id:"_7-垃圾回收-garbage-collection"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_7-垃圾回收-garbage-collection"}},[_._v("#")]),_._v(" 7. 垃圾回收（Garbage Collection）")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("标记-清除算法")]),_._v("：JavaScript 引擎定期检查哪些对象不再被引用，并释放它们占用的内存。")]),_._v(" "),v("li",[v("strong",[_._v("引用计数")]),_._v("：某些引擎可能使用引用计数来跟踪对象的引用数量，当引用数量为零时释放内存。")])]),_._v(" "),v("h3",{attrs:{id:"_8-单线程和事件循环-event-loop"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_8-单线程和事件循环-event-loop"}},[_._v("#")]),_._v(" 8. 单线程和事件循环（Event Loop）")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("单线程")]),_._v("：JavaScript 是单线程的，这意味着一次只能执行一个任务。")]),_._v(" "),v("li",[v("strong",[_._v("事件循环")]),_._v("：JavaScript 使用事件循环来处理异步操作，如定时器、网络请求等。事件循环不断检查任务队列，并按顺序执行任务。")])]),_._v(" "),v("h3",{attrs:{id:"_9-栈-call-stack-和队列-task-queue"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_9-栈-call-stack-和队列-task-queue"}},[_._v("#")]),_._v(" 9. 栈（Call Stack）和队列（Task Queue）")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("调用栈")]),_._v("：记录函数调用的历史，每进入一个函数就在栈顶添加一个帧，退出函数时弹出栈顶的帧。")]),_._v(" "),v("li",[v("strong",[_._v("任务队列")]),_._v("：存放异步任务，如定时器回调、事件回调等。事件循环会将任务队列中的任务依次放入调用栈中执行。")])]),_._v(" "),v("h3",{attrs:{id:"_10-严格模式-strict-mode"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_10-严格模式-strict-mode"}},[_._v("#")]),_._v(" 10. 严格模式（Strict Mode）")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("启用严格模式")]),_._v("：通过在脚本或函数顶部添加 "),v("code",[_._v('"use strict";')]),_._v(" 来启用严格模式。")]),_._v(" "),v("li",[v("strong",[_._v("优点")]),_._v("：更严格的错误检查，防止一些常见的编程错误，提高性能。")])]),_._v(" "),v("h3",{attrs:{id:"总结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[_._v("#")]),_._v(" 总结")]),_._v(" "),v("p",[_._v("这些基础概念是 JavaScript 底层机制的核心，理解它们可以帮助你更好地编写和调试代码。如果你对某个特定的概念有更深入的问题或需要进一步的例子，请告诉我！")])])}),[],!1,null,null,null);v.default=s.exports}}]);